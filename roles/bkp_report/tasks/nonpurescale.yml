---
    - set_fact:
          scripttorun: db2_backup_report.sh
      tags: always

    - name: Remove Special Chars from Scripts before copy
      local_action: command perl -p -i -e 's/\r//g' {{ scripttorun }}
      become: false
      run_once: true

    - name: Create Local logs Directory
      local_action: shell cat << EOF
              LOGSDIR="{{ reportsdir }}"
              if [[ ! -d ${LOGSDIR} ]]; then mkdir -m 777 -p ${LOGSDIR}; fi
              if [[ $(ls -A ${LOGSDIR}) ]]; then
                mkdir -m 777 -p ${LOGSDIR}/old
                mv -f ${LOGSDIR}/daily_report* ${LOGSDIR}/old/
              fi
              EOF
      register: cmdout
      failed_when: cmdout.rc > 1
      #delegate_to: "{{ reportsserver }}"
      run_once: true
      
    - name: Copy - Script to target node
      template: src="{{ scripttorun }}" dest="{{ logsdir }}/{{ scripttorun }}" mode=0755
      tags: copy

    - name: "Run - Script - \"{{ scripttorun }}\""
      shell: |
             #perl -p -i -e 's/\r//g' {{ logsdir }}/{{ scripttorun }}
             {{ logsdir }}/{{ scripttorun }}
      register: cmdout
      failed_when: cmdout.rc > 1
      become: True
      become_user: "{{ item }}"
      loop: "{{ db2ilist.stdout_lines }}"
      tags: run

    #- name: Fetch report files from all servers to reporting server
    #  synchronize: 
    #    src: "{{ logsdir }}/daily_report.final" 
    #    dest: "{{ reportsdir }}/daily_report_{{ inventory_hostname }}.final" 
    #    mode: pull
    #    recursive: yes
    #  delegate_to: "{{ reportsserver }}"

    - name: Fetch report files from all servers to reporting server
      local_action: shell scp {{ inventory_hostname }}:{{ logsdir }}/daily_report_{{ item }}.final {{ reportsdir }}/daily_report_{{ item }}_{{ inventory_hostname }}.final
      loop: "{{ db2ilist.stdout_lines }}"
      #delegate_to: "{{ reportsserver }}"
      tags: fetch

    - command: date +'%Y%m%d%H%M%S'
      register: timestamp
      tags: always
    
    - set_fact:
        curtmstmp: "{{ timestamp.stdout }}"
        finalreport: "{{ reportsdir }}/finalreport_{{ timestamp.stdout }}.txt"
      tags: always

    - name: Consolidate single report to mail
      local_action: command ./gen_report.sh
      register: shellout
      become: false
      run_once: true
      #delegate_to: "{{ reportsserver }}"
      tags: genreport

    - name: Final Output
      debug: msg="{{ shellout.stdout_lines}}"
      run_once: true
      tags: finalout